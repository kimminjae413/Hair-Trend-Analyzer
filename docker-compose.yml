version: '3.8'

services:
  # 백엔드 API 서버
  backend:
    build: .
    container_name: hair-trend-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - APIFY_API_KEY=${APIFY_API_KEY}
      - INSTAGRAM_API_KEY=${INSTAGRAM_API_KEY}
      - GOOGLE_SHEETS_ID=${GOOGLE_SHEETS_ID}
      - GOOGLE_SHEETS_API_KEY=${GOOGLE_SHEETS_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    volumes:
      - ./server.js:/app/server.js
      - ./src:/app/src
      - ./public:/app/public
      - node_modules:/app/node_modules
    networks:
      - hair-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 프론트엔드 개발 서버
  frontend:
    image: node:18-alpine
    container_name: hair-trend-frontend
    working_dir: /app
    command: npm start
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3001
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    networks:
      - hair-network
    depends_on:
      - backend
    restart: unless-stopped

  # Redis 캐시 서버 (선택사항)
  redis:
    image: redis:7-alpine
    container_name: hair-trend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hair-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MongoDB 데이터베이스 (선택사항)
  mongodb:
    image: mongo:6
    container_name: hair-trend-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=hairtrend2024
      - MONGO_INITDB_DATABASE=hairtrend
    volumes:
      - mongo_data:/data/db
    networks:
      - hair-network
    restart: unless-stopped

  # Nginx 리버스 프록시 (프로덕션용)
  nginx:
    image: nginx:alpine
    container_name: hair-trend-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./build:/usr/share/nginx/html:ro
    networks:
      - hair-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

networks:
  hair-network:
    driver: bridge

volumes:
  node_modules:
  redis_data:
  mongo_data:
